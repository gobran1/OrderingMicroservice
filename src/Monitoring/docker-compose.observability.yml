services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "4317:4317" #otlp grpc ( apps -> collector )
      - "4318:4318" #otlp http
      - "24224:24224" #fluent forward receiver ( fluent bit -> collector )
      - "8889:8889" #collector prometheus scrape endpoint 
    networks:
      - observability
    restart: 
      unless-stopped
  
  fluent-bit:
    image: fluent/fluent-bit:4.1.0
    container_name: fluent-bit
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./fluent-bit/fluent-bit.conf:/etc/fluent-bit/fluent-bit.conf:ro
      - ./fluent-bit/parser.conf:/etc/fluent-bit/parser.conf:ro
    environment:
      - FLUENT_ELASTICSEARCH_HOST= #NOT USED
    depends_on:
      - otel-collector
    networks:
      - observability
    restart:
      unless-stopped
  
  loki:
    image: grafana/loki:3.5.0
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - observability
    restart: unless-stopped
  
  jaeger:
    image: jaegertracing/all-in-one:1.73.0
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686" #UI
      - "14250:14250" # GRPC ( collector -> jaeger )
    networks:
      - observability
    restart: unless-stopped
  
  prometheus:
    image: prom/prometheus:v3.6.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - observability
    restart: 
      unless-stopped
  
  grafana:
    image: grafana/grafana:12.2.0
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - observability
    restart: unless-stopped
    
volumes:
  grafana-storage:

networks:
  observability:
    external: true
    name: monitoring_observability